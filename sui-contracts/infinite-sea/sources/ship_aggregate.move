// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

module infinite_sea::ship_aggregate {
    use infinite_sea::ship;
    use infinite_sea::ship_create_logic;
    use infinite_sea_common::item_id_quantity_pairs::{Self, ItemIdQuantityPairs};
    use sui::object::ID;
    use sui::tx_context;

    friend infinite_sea::skill_process_service;

    public(friend) fun create(
        owner: ID,
        health_points: u32,
        attack: u32,
        protection: u32,
        speed: u32,
        building_expenses_item_id_list: vector<u32>,
        building_expenses_item_quantity_list: vector<u32>,
        ctx: &mut tx_context::TxContext,
    ) {
        let building_expenses: ItemIdQuantityPairs = item_id_quantity_pairs::new(
            building_expenses_item_id_list,
            building_expenses_item_quantity_list,
        );
        let ship_created = ship_create_logic::verify(
            owner,
            health_points,
            attack,
            protection,
            speed,
            building_expenses,
            ctx,
        );
        let ship = ship_create_logic::mutate(
            &ship_created,
            ctx,
        );
        ship::set_ship_created_id(&mut ship_created, ship::id(&ship));
        ship::share_object(ship);
        ship::emit_ship_created(ship_created);
    }

}
