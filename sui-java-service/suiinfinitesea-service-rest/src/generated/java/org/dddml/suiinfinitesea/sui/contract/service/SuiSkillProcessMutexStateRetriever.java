// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.suiinfinitesea.sui.contract.service;

import com.github.wubuku.sui.bean.*;
import com.github.wubuku.sui.utils.*;
import org.dddml.suiinfinitesea.domain.skillprocessmutex.*;
import org.dddml.suiinfinitesea.domain.*;
import org.dddml.suiinfinitesea.sui.contract.DomainBeanUtils;
import org.dddml.suiinfinitesea.sui.contract.SkillProcessMutex;

import java.util.*;
import java.math.*;
import java.util.function.*;

public class SuiSkillProcessMutexStateRetriever {

    private SuiJsonRpcClient suiJsonRpcClient;

    private Function<String, SkillProcessMutexState.MutableSkillProcessMutexState> skillProcessMutexStateFactory;

    public SuiSkillProcessMutexStateRetriever(SuiJsonRpcClient suiJsonRpcClient,
                                  Function<String, SkillProcessMutexState.MutableSkillProcessMutexState> skillProcessMutexStateFactory
    ) {
        this.suiJsonRpcClient = suiJsonRpcClient;
        this.skillProcessMutexStateFactory = skillProcessMutexStateFactory;
    }

    public SkillProcessMutexState retrieveSkillProcessMutexState(String objectId) {
        SuiMoveObjectResponse<SkillProcessMutex> getObjectDataResponse = suiJsonRpcClient.getMoveObject(
                objectId, new SuiObjectDataOptions(true, true, true, true, true, true, true), SkillProcessMutex.class
        );
        if (getObjectDataResponse.getData() == null) {
            return null;
        }
        SkillProcessMutex skillProcessMutex = getObjectDataResponse.getData().getContent().getFields();
        return toSkillProcessMutexState(skillProcessMutex);
    }

    private SkillProcessMutexState toSkillProcessMutexState(SkillProcessMutex skillProcessMutex) {
        SkillProcessMutexState.MutableSkillProcessMutexState skillProcessMutexState = skillProcessMutexStateFactory.apply(skillProcessMutex.getPlayerId());
        skillProcessMutexState.setId_(skillProcessMutex.getId().getId());
        skillProcessMutexState.setVersion(skillProcessMutex.getVersion());
        skillProcessMutexState.setActiveSkillType(skillProcessMutex.getActiveSkillType());
        return skillProcessMutexState;
    }

    
}

