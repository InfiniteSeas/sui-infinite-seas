// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.suiinfinitesea.sui.contract.service;

import com.github.wubuku.sui.bean.*;
import com.github.wubuku.sui.utils.*;
import org.dddml.suiinfinitesea.domain.ship.*;
import org.dddml.suiinfinitesea.domain.*;
import org.dddml.suiinfinitesea.sui.contract.DomainBeanUtils;
import org.dddml.suiinfinitesea.sui.contract.Ship;

import java.util.*;
import java.math.*;
import java.util.function.*;

public class SuiShipStateRetriever {

    private SuiJsonRpcClient suiJsonRpcClient;

    private Function<String, ShipState.MutableShipState> shipStateFactory;

    public SuiShipStateRetriever(SuiJsonRpcClient suiJsonRpcClient,
                                  Function<String, ShipState.MutableShipState> shipStateFactory
    ) {
        this.suiJsonRpcClient = suiJsonRpcClient;
        this.shipStateFactory = shipStateFactory;
    }

    public ShipState retrieveShipState(String objectId) {
        SuiMoveObjectResponse<Ship> getObjectDataResponse = suiJsonRpcClient.getMoveObject(
                objectId, new SuiObjectDataOptions(true, true, true, true, true, true, true), Ship.class
        );
        if (getObjectDataResponse.getData() == null) {
            return null;
        }
        Ship ship = getObjectDataResponse.getData().getContent().getFields();
        return toShipState(ship);
    }

    private ShipState toShipState(Ship ship) {
        ShipState.MutableShipState shipState = shipStateFactory.apply(ship.getId().getId());
        shipState.setVersion(ship.getVersion());
        shipState.setOwner(ship.getOwner());
        shipState.setHealthPoints(ship.getHealthPoints());
        shipState.setAttack(ship.getAttack());
        shipState.setProtection(ship.getProtection());
        shipState.setSpeed(ship.getSpeed());
        shipState.setBuildingExpenses(DomainBeanUtils.toItemIdQuantityPairs(ship.getBuildingExpenses()));
        shipState.setInventory(java.util.Arrays.stream(ship.getInventory()).map(x -> DomainBeanUtils.toItemIdQuantityPair(x)).collect(java.util.stream.Collectors.toSet()));
        return shipState;
    }

    
}

