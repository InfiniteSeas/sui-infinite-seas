aggregates:
  Item:
    module: "Common"
    metadata:
      Preprocessors: ["MOVE_CRUD_IT"]
      #CRUD_IT_NO_UPDATE: true
      CRUD_IT_NO_DELETE: true
      ShouldIssuePublisherObject: true
    id:
      name: ItemId
      type: u32
      generator:
        class: assigned
        tableName: ItemTable
    properties:
      Name:
        type: AsciiString
        length: 100
      #Type:
      #  type: ItemType
      RequiredForCompletion:
        type: bool
      SellsFor:
        type: u32
    methods:
      Create:
        requiredPermission: "__Publisher__"
        event:
          isObjectShared: true # Share the object after created.
      Update:
        requiredPermission: "__Publisher__"


  ItemCreation:
    module: "Common"
    metadata:
      Preprocessors: ["MOVE_CRUD_IT"]
      #CRUD_IT_NO_UPDATE: true
      CRUD_IT_NO_DELETE: true
    implements:
      - ItemCreationOrProduction
    id:
      name: ItemCreationId
      type: SkillTypeItemIdPair
      generator:
        class: assigned
        tableName: ItemCreationTable
    properties:
      ResourceCost:
        type: u32
    methods:
      Create:
        requiredPermission: "__Publisher__"
        event:
          isObjectShared: true # Share the object after created.
      Update:
        requiredPermission: "__Publisher__"


  ItemProduction:
    module: "Common"
    metadata:
      Preprocessors: ["MOVE_CRUD_IT"]
      #CRUD_IT_NO_UPDATE: true
      CRUD_IT_NO_DELETE: true
    implements:
      - ItemCreationOrProduction
    id:
      name: ItemProductionId
      type: SkillTypeItemIdPair
      generator:
        class: assigned
        tableName: ItemProductionTable
    properties:
      ProductionMaterials:
        type: ProductionMaterials
    methods:
      Create:
        requiredPermission: "__Publisher__"
        event:
          isObjectShared: true # Share the object after created.
      Update:
        requiredPermission: "__Publisher__"


superObjects:
  ItemCreationOrProduction:
    properties:
      #RequirementsSkill:
      #  type: SkillType
      RequirementsLevel:
        type: u16
      BaseQuantity:
        type: u32
      BaseExperience:
        type: u32
      BaseCreationTime:
        type: u64
      EnergyCost:
        type: u64
      SuccessRate: #(percentage)
        type: u16


singletonObjects:
  ExperienceTable:
    module: "Common"
    properties:
      Levels:
        itemType: ExperienceLevel
        isList: true
    methods:
      "__Init__":
        event:
          isObjectShared: true # Share the object after initialization.
      AddLevel:
        requiredPermission: "__Publisher__"
        parameters:
          Level:
            type: u16
          Experience:
            type: u32
          Difference:
            type: u32
        event:
          name: ExperienceLevelAdded
      UpdateLevel:
        requiredPermission: "__Publisher__"
        parameters:
          Level:
            type: u16
          Experience:
            type: u32
          Difference:
            type: u32
        event:
          name: ExperienceLevelUpdated


valueObjects:
  SkillTypeItemIdPair:
    module: "Common"
    properties:
      SkillType:
        type: SkillType
      ItemId:
        type: u32

  SkillTypePlayerIdPair:
    module: "Common"
    properties:
      SkillType:
        type: SkillType
      PlayerId:
        type: ID

  SkillProcessId:
    module: "Common"
    properties:
      SkillType:
        type: SkillType
      PlayerId:
        type: ID
      SequenceNumber:
        type: u8

  ExperienceLevel:
    module: "Common"
    properties:
      Level:
        type: u16
      Experience:
        type: u32
      Difference:
        type: u32

  ProductionMaterials:
    module: "Common"
    hibernateMappingType: JsonObject
    properties:
      Items:
        itemType: ItemIdQuantityPair
        isList: true
    methods:
      New:
        isConstructor: true
        constants:
          EEmptyList:
            constantExpression:
              Move: 10
            type: u64
          EIncorrectListLength:
            constantExpression:
              Move: 11
            type: u64
        parameters:
          ItemIdList:
            itemType: u32
          ItemQuantityList:
            itemType: u32
        implementationLogic:
          Move: >-
            assert!(std::vector::length(&item_id_list) > 0, EEmptyList);
                    assert!(std::vector::length(&item_id_list) == std::vector::length(&item_quantity_list), EIncorrectListLength);
                    let items = std::vector::empty();
                    let l = std::vector::length(&item_id_list);
                    let i = 0;
                    while (i < l) {
                        let item_id = *std::vector::borrow(&item_id_list, i);
                        let item_quantity = *std::vector::borrow(&item_quantity_list, i);
                        std::vector::push_back(
                            &mut items,
                            infinite_sea_common::item_id_quantity_pair::new(item_id, item_quantity)
                        );
                        i = i + 1;
                    };
                    {_INSTANTIATE_STRUCT_}

  ItemIdQuantityPair:
    module: "Common"
    properties:
      ItemId:
        type: u32
      Quantity:
        type: u32
        #1  Copper Ore
        #1  Tin Ore


enumObjects:
  SkillType:
    module: "Common"
    baseType: u8
    values:
      Farming:
        value: 0
      Woodcutting:
        value: 1
      Fishing:
        value: 2
      Mining:
        value: 3
      Smithing:
        value: 4
      Cooking:
        value: 5
      Crafting:
        value: 6
      Township:
        value: 7
      Sailing:
        value: 8
      #Thieving:
      #  value: xxx

#  IslandResourceType:
#    module: "Common"
#    baseType: u8
#    values:
#      Seed:
#        value: 0
#      Wood:
#        value: 1
#      Fish:
#        value: 2
#      Mineral:
#        value: 3

#  ItemType:
#    module: "Common"
#    baseType: u8
#    values:
#      Logs:
#        value: 0

